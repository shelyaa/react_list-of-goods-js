{"version":3,"sources":["components/GoodCard.jsx","components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","handleSort","className","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCE3BI,EAA4B,iBAC5BC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAA0BX,EAA1B,GAA0D,IAAvBO,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCG,EAAa,YAAOZ,GAqB1B,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcH,UAGTG,EAOcM,CACnBd,EAAiB,CAAEG,YAAWE,YAG1BU,EAAa,SAAAN,GAAI,OAAI,kBAAML,EAAaK,KAI9C,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASH,EAAWjB,GACpBkB,UAAWG,IAAG,iBAAkB,CAC9B,WAAYhB,IAAcL,IAJ9B,iCAUA,wBACEmB,KAAK,SACLC,QAASH,EAAWhB,GACpBiB,UAAWG,IAAG,oBAAqB,CACjC,WAAYhB,IAAcJ,IAJ9B,4BAUA,wBACEkB,KAAK,SACLD,UAAWG,IAAG,oBAAqB,CACjC,YAAad,IAEfa,QA9Bc,kBAAMZ,GAAYD,IAyBlC,sBAUEA,GAAWF,IACX,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPd,EAAa,IACbE,GAAW,IALf,sBAcJ,cAAC,EAAD,CAAUV,MAAOW,QCzGvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d81c4c4a.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodCard } from './GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reverse },\n  );\n\n  const handleSort = sort => () => setSortField(sort);\n\n  const handleReverse = () => setReverse(!reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={handleSort(SORT_FIELD_ALPHABETICALLY)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleSort(SORT_FIELD_LENGTH)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(reverse || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}